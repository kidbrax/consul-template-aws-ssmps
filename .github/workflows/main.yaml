name: build-release

on:
  push: # all branches
  pull_request:
    branches:
      - master # runs workflow on any pull request made to master

jobs:
  # lint

  # test

  build_windows:
    runs-on: windows-latest

    env:
      GOOS: windows
      GOARCH: amd64

    steps:
    - uses: actions/checkout@v2

    - name: build
      run: go build -ldflags "-X main.version=0.1.2" -o ssmps.exe main.go
      shell: powershell

    - name: Upload Windows build
      uses: actions/upload-artifact@v1
      with:
        name: ssmpsw # this is a directory it puts the path below in
        path: ssmps.exe

  build_linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: build
      run: GOOS=linux GOARCH=amd64 go build -ldflags "-X main.version=0.1.2" -o ssmps main.go

    - name: Upload Linux build
      uses: actions/upload-artifact@v1
      with:
        name: ssmpsl # this is a directory it puts the path below in
        path: ssmps

    - name: testing ref
      run: echo ${{ github.ref }}

  release:
      needs: [build_windows, build_linux]
      runs-on: ubuntu-latest
      if: startsWith(github.ref, 'refs/tags/')
        # refs/heads/mod
        # refs/pull/1/merge
        # refs/tags/v0.1.3.4

      # env:
      #   NAMETAG: v0.1.3.5 # used for the tag name and the release name

      steps:
      - uses: actions/checkout@v2

      - name: testing if
        run: echo ${{ github.ref }}

      - name: Download Windows build
        uses: actions/download-artifact@v1
        with:
          name: ssmpsw

      - name: Download Linux build
        uses: actions/download-artifact@v1
        with:
          name: ssmpsl

      - name: Zip build files
        run: |
          zip --junk-paths ssmps.zip ssmpsl/ssmps
          zip --junk-paths ssmps.exe.zip ssmpsw/ssmps.exe

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # creating the release also creates a git tag if it is not a draft release
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: true

      - name: Upload Release Asset Windows
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ssmps.exe.zip
          asset_name: ssmps.exe.zip
          asset_content_type: application/zip

      - name: Upload Release Asset Linux
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ssmps.zip
          asset_name: ssmps.zip
          asset_content_type: application/zip
